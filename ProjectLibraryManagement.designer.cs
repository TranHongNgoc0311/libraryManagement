#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraMaster_ver2._0
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProjectLibraryManagement")]
	public partial class ProjectLibraryManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertAuthorsBook(AuthorsBook instance);
    partial void UpdateAuthorsBook(AuthorsBook instance);
    partial void DeleteAuthorsBook(AuthorsBook instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertBorrowDetail(BorrowDetail instance);
    partial void UpdateBorrowDetail(BorrowDetail instance);
    partial void DeleteBorrowDetail(BorrowDetail instance);
    partial void InsertBorrow(Borrow instance);
    partial void UpdateBorrow(Borrow instance);
    partial void DeleteBorrow(Borrow instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    #endregion
		
		public ProjectLibraryManagementDataContext() : 
				base(global::LibraMaster_ver2._0.Properties.Settings.Default.ProjectLibraryManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectLibraryManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectLibraryManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectLibraryManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectLibraryManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<AuthorsBook> AuthorsBooks
		{
			get
			{
				return this.GetTable<AuthorsBook>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<BorrowDetail> BorrowDetails
		{
			get
			{
				return this.GetTable<BorrowDetail>();
			}
		}
		
		public System.Data.Linq.Table<Borrow> Borrows
		{
			get
			{
				return this.GetTable<Borrow>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _created;
		
		private System.Nullable<int> _level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OnlevelChanging(System.Nullable<int> value);
    partial void OnlevelChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(120)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int")]
		public System.Nullable<int> level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authors")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _trueName;
		
		private System.Nullable<bool> _gender;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private System.Nullable<System.DateTime> _created;
		
		private EntitySet<AuthorsBook> _AuthorsBooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntrueNameChanging(string value);
    partial void OntrueNameChanged();
    partial void OngenderChanging(System.Nullable<bool> value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    #endregion
		
		public Author()
		{
			this._AuthorsBooks = new EntitySet<AuthorsBook>(new Action<AuthorsBook>(this.attach_AuthorsBooks), new Action<AuthorsBook>(this.detach_AuthorsBooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trueName", DbType="NVarChar(200)")]
		public string trueName
		{
			get
			{
				return this._trueName;
			}
			set
			{
				if ((this._trueName != value))
				{
					this.OntrueNameChanging(value);
					this.SendPropertyChanging();
					this._trueName = value;
					this.SendPropertyChanged("trueName");
					this.OntrueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit")]
		public System.Nullable<bool> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_AuthorsBook", Storage="_AuthorsBooks", ThisKey="id", OtherKey="AuthorId")]
		public EntitySet<AuthorsBook> AuthorsBooks
		{
			get
			{
				return this._AuthorsBooks;
			}
			set
			{
				this._AuthorsBooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AuthorsBooks(AuthorsBook entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_AuthorsBooks(AuthorsBook entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorsBook")]
	public partial class AuthorsBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookId;
		
		private int _AuthorId;
		
		private string _position;
		
		private EntityRef<Author> _Author;
		
		private EntityRef<Book> _Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookIdChanging(int value);
    partial void OnbookIdChanged();
    partial void OnAuthorIdChanging(int value);
    partial void OnAuthorIdChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    #endregion
		
		public AuthorsBook()
		{
			this._Author = default(EntityRef<Author>);
			this._Book = default(EntityRef<Book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bookId
		{
			get
			{
				return this._bookId;
			}
			set
			{
				if ((this._bookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookIdChanging(value);
					this.SendPropertyChanging();
					this._bookId = value;
					this.SendPropertyChanged("bookId");
					this.OnbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_AuthorsBook", Storage="_Author", ThisKey="AuthorId", OtherKey="id", IsForeignKey=true)]
		public Author Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				Author previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.AuthorsBooks.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.AuthorsBooks.Add(this);
						this._AuthorId = value.id;
					}
					else
					{
						this._AuthorId = default(int);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_AuthorsBook", Storage="_Book", ThisKey="bookId", OtherKey="id", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.AuthorsBooks.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.AuthorsBooks.Add(this);
						this._bookId = value.id;
					}
					else
					{
						this._bookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _publisher;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<int> _pages;
		
		private System.Nullable<int> _catID;
		
		private System.Nullable<int> _bookYear;
		
		private System.Nullable<System.DateTime> _created;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<int> _shelf_no;
		
		private EntitySet<AuthorsBook> _AuthorsBooks;
		
		private EntitySet<BorrowDetail> _BorrowDetails;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpublisherChanging(string value);
    partial void OnpublisherChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnpagesChanging(System.Nullable<int> value);
    partial void OnpagesChanged();
    partial void OncatIDChanging(System.Nullable<int> value);
    partial void OncatIDChanged();
    partial void OnbookYearChanging(System.Nullable<int> value);
    partial void OnbookYearChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void Onshelf_noChanging(System.Nullable<int> value);
    partial void Onshelf_noChanged();
    #endregion
		
		public Book()
		{
			this._AuthorsBooks = new EntitySet<AuthorsBook>(new Action<AuthorsBook>(this.attach_AuthorsBooks), new Action<AuthorsBook>(this.detach_AuthorsBooks));
			this._BorrowDetails = new EntitySet<BorrowDetail>(new Action<BorrowDetail>(this.attach_BorrowDetails), new Action<BorrowDetail>(this.detach_BorrowDetails));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher", DbType="NVarChar(100)")]
		public string publisher
		{
			get
			{
				return this._publisher;
			}
			set
			{
				if ((this._publisher != value))
				{
					this.OnpublisherChanging(value);
					this.SendPropertyChanging();
					this._publisher = value;
					this.SendPropertyChanged("publisher");
					this.OnpublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pages", DbType="Int")]
		public System.Nullable<int> pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				if ((this._pages != value))
				{
					this.OnpagesChanging(value);
					this.SendPropertyChanging();
					this._pages = value;
					this.SendPropertyChanged("pages");
					this.OnpagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", DbType="Int")]
		public System.Nullable<int> catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookYear", DbType="Int")]
		public System.Nullable<int> bookYear
		{
			get
			{
				return this._bookYear;
			}
			set
			{
				if ((this._bookYear != value))
				{
					this.OnbookYearChanging(value);
					this.SendPropertyChanging();
					this._bookYear = value;
					this.SendPropertyChanged("bookYear");
					this.OnbookYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shelf_no", DbType="Int")]
		public System.Nullable<int> shelf_no
		{
			get
			{
				return this._shelf_no;
			}
			set
			{
				if ((this._shelf_no != value))
				{
					this.Onshelf_noChanging(value);
					this.SendPropertyChanging();
					this._shelf_no = value;
					this.SendPropertyChanged("shelf_no");
					this.Onshelf_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_AuthorsBook", Storage="_AuthorsBooks", ThisKey="id", OtherKey="bookId")]
		public EntitySet<AuthorsBook> AuthorsBooks
		{
			get
			{
				return this._AuthorsBooks;
			}
			set
			{
				this._AuthorsBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BorrowDetail", Storage="_BorrowDetails", ThisKey="id", OtherKey="bookId")]
		public EntitySet<BorrowDetail> BorrowDetails
		{
			get
			{
				return this._BorrowDetails;
			}
			set
			{
				this._BorrowDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Book", Storage="_Category", ThisKey="catID", OtherKey="id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._catID = value.id;
					}
					else
					{
						this._catID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AuthorsBooks(AuthorsBook entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_AuthorsBooks(AuthorsBook entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_BorrowDetails(BorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BorrowDetails(BorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowDetail")]
	public partial class BorrowDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _borrowId;
		
		private int _bookId;
		
		private System.Nullable<int> _countDaysLate;
		
		private System.Nullable<System.DateTime> _returnedDate;
		
		private string _returnStatus;
		
		private System.Nullable<double> _fee;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<System.DateTime> _created;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Borrow> _Borrow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnborrowIdChanging(string value);
    partial void OnborrowIdChanged();
    partial void OnbookIdChanging(int value);
    partial void OnbookIdChanged();
    partial void OncountDaysLateChanging(System.Nullable<int> value);
    partial void OncountDaysLateChanged();
    partial void OnreturnedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreturnedDateChanged();
    partial void OnreturnStatusChanging(string value);
    partial void OnreturnStatusChanged();
    partial void OnfeeChanging(System.Nullable<double> value);
    partial void OnfeeChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    #endregion
		
		public BorrowDetail()
		{
			this._Book = default(EntityRef<Book>);
			this._Borrow = default(EntityRef<Borrow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrowId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string borrowId
		{
			get
			{
				return this._borrowId;
			}
			set
			{
				if ((this._borrowId != value))
				{
					if (this._Borrow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnborrowIdChanging(value);
					this.SendPropertyChanging();
					this._borrowId = value;
					this.SendPropertyChanged("borrowId");
					this.OnborrowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bookId
		{
			get
			{
				return this._bookId;
			}
			set
			{
				if ((this._bookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookIdChanging(value);
					this.SendPropertyChanging();
					this._bookId = value;
					this.SendPropertyChanged("bookId");
					this.OnbookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countDaysLate", DbType="Int")]
		public System.Nullable<int> countDaysLate
		{
			get
			{
				return this._countDaysLate;
			}
			set
			{
				if ((this._countDaysLate != value))
				{
					this.OncountDaysLateChanging(value);
					this.SendPropertyChanging();
					this._countDaysLate = value;
					this.SendPropertyChanged("countDaysLate");
					this.OncountDaysLateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> returnedDate
		{
			get
			{
				return this._returnedDate;
			}
			set
			{
				if ((this._returnedDate != value))
				{
					this.OnreturnedDateChanging(value);
					this.SendPropertyChanging();
					this._returnedDate = value;
					this.SendPropertyChanged("returnedDate");
					this.OnreturnedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnStatus", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string returnStatus
		{
			get
			{
				return this._returnStatus;
			}
			set
			{
				if ((this._returnStatus != value))
				{
					this.OnreturnStatusChanging(value);
					this.SendPropertyChanging();
					this._returnStatus = value;
					this.SendPropertyChanged("returnStatus");
					this.OnreturnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fee", DbType="Float")]
		public System.Nullable<double> fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnfeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("fee");
					this.OnfeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BorrowDetail", Storage="_Book", ThisKey="bookId", OtherKey="id", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BorrowDetails.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BorrowDetails.Add(this);
						this._bookId = value.id;
					}
					else
					{
						this._bookId = default(int);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrow_BorrowDetail", Storage="_Borrow", ThisKey="borrowId", OtherKey="id", IsForeignKey=true)]
		public Borrow Borrow
		{
			get
			{
				return this._Borrow.Entity;
			}
			set
			{
				Borrow previousValue = this._Borrow.Entity;
				if (((previousValue != value) 
							|| (this._Borrow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Borrow.Entity = null;
						previousValue.BorrowDetails.Remove(this);
					}
					this._Borrow.Entity = value;
					if ((value != null))
					{
						value.BorrowDetails.Add(this);
						this._borrowId = value.id;
					}
					else
					{
						this._borrowId = default(string);
					}
					this.SendPropertyChanged("Borrow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Borrows")]
	public partial class Borrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private System.Nullable<int> _memberId;
		
		private System.Nullable<System.DateTime> _borrowDate;
		
		private System.Nullable<System.DateTime> _returnDateIssua;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<double> _totalFee;
		
		private System.Nullable<int> _totalBook;
		
		private EntitySet<BorrowDetail> _BorrowDetails;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnmemberIdChanging(System.Nullable<int> value);
    partial void OnmemberIdChanged();
    partial void OnborrowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnborrowDateChanged();
    partial void OnreturnDateIssuaChanging(System.Nullable<System.DateTime> value);
    partial void OnreturnDateIssuaChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OntotalFeeChanging(System.Nullable<double> value);
    partial void OntotalFeeChanged();
    partial void OntotalBookChanging(System.Nullable<int> value);
    partial void OntotalBookChanged();
    #endregion
		
		public Borrow()
		{
			this._BorrowDetails = new EntitySet<BorrowDetail>(new Action<BorrowDetail>(this.attach_BorrowDetails), new Action<BorrowDetail>(this.detach_BorrowDetails));
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="Int")]
		public System.Nullable<int> memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if ((this._Member.HasLoadedOrAssignedValue || this._Member1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrowDate", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> borrowDate
		{
			get
			{
				return this._borrowDate;
			}
			set
			{
				if ((this._borrowDate != value))
				{
					this.OnborrowDateChanging(value);
					this.SendPropertyChanging();
					this._borrowDate = value;
					this.SendPropertyChanged("borrowDate");
					this.OnborrowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnDateIssua", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> returnDateIssua
		{
			get
			{
				return this._returnDateIssua;
			}
			set
			{
				if ((this._returnDateIssua != value))
				{
					this.OnreturnDateIssuaChanging(value);
					this.SendPropertyChanging();
					this._returnDateIssua = value;
					this.SendPropertyChanged("returnDateIssua");
					this.OnreturnDateIssuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalFee", DbType="Float")]
		public System.Nullable<double> totalFee
		{
			get
			{
				return this._totalFee;
			}
			set
			{
				if ((this._totalFee != value))
				{
					this.OntotalFeeChanging(value);
					this.SendPropertyChanging();
					this._totalFee = value;
					this.SendPropertyChanged("totalFee");
					this.OntotalFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalBook", DbType="Int")]
		public System.Nullable<int> totalBook
		{
			get
			{
				return this._totalBook;
			}
			set
			{
				if ((this._totalBook != value))
				{
					this.OntotalBookChanging(value);
					this.SendPropertyChanging();
					this._totalBook = value;
					this.SendPropertyChanged("totalBook");
					this.OntotalBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrow_BorrowDetail", Storage="_BorrowDetails", ThisKey="id", OtherKey="borrowId")]
		public EntitySet<BorrowDetail> BorrowDetails
		{
			get
			{
				return this._BorrowDetails;
			}
			set
			{
				this._BorrowDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Borrow", Storage="_Member", ThisKey="memberId", OtherKey="id", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Borrows.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Borrows.Add(this);
						this._memberId = value.id;
					}
					else
					{
						this._memberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Borrow1", Storage="_Member1", ThisKey="memberId", OtherKey="id", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.Borrows1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.Borrows1.Add(this);
						this._memberId = value.id;
					}
					else
					{
						this._memberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowDetails(BorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Borrow = this;
		}
		
		private void detach_BorrowDetails(BorrowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Borrow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<bool> _status;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public Category()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Book", Storage="_Books", ThisKey="id", OtherKey="catID")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Members")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _firstName;
		
		private string _lastName;
		
		private System.Nullable<bool> _gender;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _phone;
		
		private string _email;
		
		private string _address;
		
		private System.Nullable<System.DateTime> _created;
		
		private System.Data.Linq.Binary _image;
		
		private EntitySet<Borrow> _Borrows;
		
		private EntitySet<Borrow> _Borrows1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OngenderChanging(System.Nullable<bool> value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public Member()
		{
			this._Borrows = new EntitySet<Borrow>(new Action<Borrow>(this.attach_Borrows), new Action<Borrow>(this.detach_Borrows));
			this._Borrows1 = new EntitySet<Borrow>(new Action<Borrow>(this.attach_Borrows1), new Action<Borrow>(this.detach_Borrows1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(50)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(50)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit")]
		public System.Nullable<bool> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(120)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Borrow", Storage="_Borrows", ThisKey="id", OtherKey="memberId")]
		public EntitySet<Borrow> Borrows
		{
			get
			{
				return this._Borrows;
			}
			set
			{
				this._Borrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Borrow1", Storage="_Borrows1", ThisKey="id", OtherKey="memberId")]
		public EntitySet<Borrow> Borrows1
		{
			get
			{
				return this._Borrows1;
			}
			set
			{
				this._Borrows1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Borrows(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Borrows(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Borrows1(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_Borrows1(Borrow entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
	}
}
#pragma warning restore 1591
